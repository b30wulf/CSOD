<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<link href="style.css" type="text/css" rel=stylesheet>
<title>Совет 14</title>
</head>
<body lang=RU link=blue vlink=purple class="Normal" bgcolor="#FFFFFF">
<h2><a name="top">Совет 14. Не воспринимайте слишком серьезно семиуровневую 
  эталонную модель </a>OSI</h2>
<hr><div align="right"><a href="adv14.htm#p3">Вниз</a> | <a href="index.htm">Содержание</a> | <a href="adv13.htm">Назад</a> | <a href="adv15.htm">Далее</a></div> 
<p style='text-align:justify;'>Поскольку задача проектирования и реализации сетевых 
  протоколов очень сложна, обычно ее разделяют на меньшие части, более простые 
  для понимания. Традиционно для этого используется концепция уровней. Каждый 
  уровень предоставляет сервисы уровням выше себя и пользуется сервисами нижележащих 
  уровней.</p>
<p style='text-align:justify;'>Например, на рис. 2.1, где изображен упрощенный 
  стек протоколов TCP/IP уровень IP предоставляет сервис, именуемый доставкой 
  датаграмм, уровням TCP и UDP. Чтобы обеспечить такой сервис, IP пользуется сервисами 
  для передачи датаграмм физическому носителю, которые предоставляет уровень сетевого 
  интерфейса.</p>
<h3><a name="p1">Модель </a>OSI</h3>
<p style='text-align:justify;'>Наверное, самый известный пример многоуровневой 
  схемы сетевых протоколов&nbsp;- это эталонная модель открытого взаимодействия 
  систем (Reference Model of Open Systems Interconnection), предложенная Международной 
  организацией по стандартизации (ISO).</p>
<p style='text-align:justify;'><i>Примечание:</i> Многие ошибочно полагают, что 
  в модели OSI были впервые введены концепции разбиения на уровни, виртуализации 
  и многие другие. На самом деле, эти идеи были хорошо известны и активно применялись 
  разработчиками сети ARPANET, которые создали семейство протоколов TCP/IP задолго 
  до появления модели OSI. Об истории этого вопроса вы можете узнать в RFC 871 
  [Padlipsky 1982].</p>
<p style='text-align:justify;'>Поскольку в этой модели семь уровней (рис. 2.23), 
  ее часто называют семиуровневой моделью OSI.</p>
<p align=center style='text-align:center;'> <img width=196 height=215
src="./img/image026.gif" v:shapes="_x0000_i1026"> </p>
<p align=center style='text-align:center;'>Рис. 2.23. Семиуровневая талонная модель 
  OSI</p>
<p style='text-align:justify;'>Как уже отмечалось, уровень N предоставляет сервисы 
  уровню N+1 и пользуется сервисами, предоставляемыми уровнем N-1. Кроме того, 
  каждый уровень может взаимодействовать только со своими непосредственными соседями 
  сверху и снизу. Это взаимодействие происходит посредством четко определенных 
  интерфейсов между соседними уровнями, поэтому в принципе реализацию любого уровня 
  можно заменить при условии, что новая реализация предоставляет в точности те 
  же сервисы, и это не отразит на остальных уровнях. Одноименные уровни в коммуникационных 
  стеках обмениваются данными (по сети) с помощью протоколов.</p>
<p style='text-align:justify;'>Эти уровни часто упоминаются в литературе по вычислительным 
  сетям. Каждый из них предоставляет следующие сервисы:</p>
<ul type=disc>
  <li style='text-align:justify;     '>физический уровень. Этот уровень связан 
    с аппаратурой. Здесь определяю электрические и временные характеристики интерфейса, 
    способ передачи битов физическому носителю, кадрирование и даже размеры и 
    форма разъемов</li>
  <li style='text-align:justify;     '>канальный уровень. Это программный интерфейс 
    к физическому уровню. В его задачу входит предоставление надежной связи с 
    последним. На этом вне находятся драйверы устройств, используемые сетевым 
    уровнем для общения с физическими устройствами. Кроме того, этот уровень обеспечивает 
    формирование кадров для канала, проверку контрольных сумм с целью обнаружения 
    искажения данных и управление совместным доступом к физическому носителю. 
    Обычно задача интерфейса между сетевым и канальным уровнями&nbsp;- создание 
    механизма, обеспечивающего независимость от конкретного устройства;</li>
  <li style='text-align:justify;     '>сетевой уровень. Этот уровень занимается 
    доставкой пакетов от одного узла другому. Он отвечает за адресацию и маршрутизацию, 
    фрагментацию и сборку, а также за управление потоком и предотвращение перегрузок;</li>
  <li style='text-align:justify;     '>транспортный уровень. Реализует надежную 
    сквозную связь между узлами сети, а также управление потоком и предотвращение 
    перегрузок. Он компенсирует ненадежность, присущую нижним уровням, за счет 
    обработки ошибок, которые вызваны искажением данных, потерей пакетов и их 
    доставкой не по порядку;</li>
  <li style='text-align:justify;     '>сеансовый уровень. Транспортный уровень 
    предоставляет надежный полнодуплексный коммуникационный канал между двумя 
    узлами. Сеансовый уровень добавляет такие сервисы, как организация и уничтожение 
    сеанса (например, вход в систему и выход из нее), управление диалогом (эмуляция 
    полудуплексного терминала), синхронизация (создание контрольных точек при 
    передаче больших файлов) и иные надстройки над надежным протоко­лом четвертого 
    уровня;</li>
  <li style='text-align:justify;     '>уровень представления. Отвечает за представление 
    данных, например, преобразование форматов (скажем, из кода ASCII в код EBCDIC) 
    и сжатие;</li>
  <li style='text-align:justify;     '>прикладной уровень. На нем располагаются 
    пользовательские программы, использующиеся остальными четырьмя уровнями для 
    обмена данными. Известные из мира TCP/IP примеры - это telnet, ftp, почтовые 
    клиенты и Web-браузеры.</li>
</ul>
<p style='text-align:justify;'>Официальное описание семиуровневой модели OSI приведено 
  в документе International Standards Organization 1984], но оно лишь в общих 
  чертах декларирует, что должен делать каждый уровень. Детальное описание сервисов, 
  предоставляемых протоколами на отдельных уровнях, содержится в других документах 
  ISO. Довольно подробное объяснение модели и ее различных уровней со ссылками 
  на соответствующие документы ISO можно найти в работе (Jain and Agrawala 1993].</p>
<p style='text-align:justify;'>Хотя модель OSI полезна как основа для обсуждения 
  сетевых архитектур и реализаций, ее нельзя рассматривать как готовый чертеж 
  для создания любой сетевой архитектуры. Не следует также думать, что размещение 
  некоторой функции на уровне N в этой модели означает, что только здесь наилучшее 
  для нее место.</p>
<p style='text-align:justify;'>Модель OSI имеет множество недостатков. Хотя, в 
  конечном итоге, были созданы работающие реализации, протоколы OSI на сегодняшний 
  день утратили актуальность. Основные проблемы этой модели в том, что, во-первых, 
  распределение функций между уровнями произвольно и не всегда очевидно, во-вторых, 
  она была спроектирована (комитетом) без готовой реализации. Вспомните, как разрабатывался 
  TCP/IP, стандарты которого основаны на результатах экспериментов.</p>
<p style='text-align:justify;'>Другая проблема модели OSI&nbsp;- это сложность 
  и неэффективность. Некоторые функции выполняются сразу на нескольких уровнях. 
  Так, обнаружение и исправление ошибок происходит на большинстве уровней.</p>
<p style='text-align:justify;'>Как отмечено в книге [Tanenbaum 1996], один из 
  основных дефектов модели OSI состоит в том, что она страдает «коммуникационной 
  ментальностью». Это относится и к терминологии, отличающейся от общеупотребительной, 
  и к спецификации примитивов интерфейсов между уровнями, которые более пригодны 
  для телефонных, а не вычислительных сетей.</p>
<p style='text-align:justify;'>Наконец, выбор именно семи уровней продиктован, 
  скорее, политическими, а не техническими причинами. В действительности сеансовый 
  уровень и уровень представления редко встречаются в реально работающих сетях.</p>
<h3><a name="p2">Модель TCP/IP</a></h3>
<p style='text-align:justify;'>Сравним модель OSI с моделью TCP/IP. Важно отдавать 
  себе отчет в том, что модель TCP/IP документирует дизайн семейства протоколов 
  TCP/IP. Ее не предполагалось представлять в качестве эталона, как модель OSI. 
  Поэтому никто и не рассматривает ее как основу для проектирования новых сетевых 
  архитектур. Тем не менее поучительно сравнить две модели и посмотреть, как уровни 
  TCP/IP отображаются на уровни модели OSI. По крайней мере, это напоминает, что 
  модель OSI&nbsp;- не единственный правильный путь.</p>
<p align=center style='text-align:center;'> <img width=458 height=245
src="./img/image027.gif" v:shapes="_x0000_i1027"> </p>
<p align=center style='text-align:center;'>Рис. 2.24. Сравнение модели OSI и стека 
  TCP/IP</p>
<p style='text-align:justify;'>Как видно из рис. 2.24, стек протоколов TCP/IP 
  состоит из четырех уровней. На прикладном уровне решаются все задачи, свойственные 
  прикладному уровню, уровню представления и сеансовому уровню модели OSI. Транспортный 
  уровень аналогичен соответствующему уровню в OSI и занимается сквозной доставкой. 
  На транспортном уровне определены протоколы TCP и UDP, на межсетевом протоколы 
  IP, ICMP и IGMP (Internet Group Management Protocol). Он соответствует сетевому 
  уровню модели OSI.</p>
<p style='text-align:justify;'><i>Примечание:</i> С протоколом IP вы уже знакомы. 
  ICMP (Internet Control Message Protocol)&nbsp;- это межсетевой протокол контрольных 
  сообщений, который используется для передачи управляющих сообщений и информации 
  об ошибках между системами. Например, сообщение «хост недоступен» передается 
  по протоколу ICMP, равно как запросы и ответы, формируемые утилитой ping. IGMP 
  (Internet Group Management Protocol)&nbsp;- это межсетевой протокол управления 
  группами, с помощью которого хосты сообщают маршрутизаторам, поддерживающим 
  групповое вещание, о принадлежности к локальным группам. Хотя сообщения протоколов 
  ICMP и IGMP передаются в виде IP-датаграмм, они рассматриваются как неотъемлемая 
  часть IP, а не как протоколы более высокого уровня.</p>
<p style='text-align:justify;'>Интерфейсный уровень отвечает за взаимодействие 
  между компьютером и физическим сетевым оборудованием. Он приблизительно соответствует 
  канальному и физическому уровням модели OSI. Интерфейсный уровень по-настоящему 
  не описан в документации по архитектуре TCP/IP. Там сказано только, что он обеспечивает 
  доступ к сетевой аппаратуре системно-зависимым способом.</p>
<p style='text-align:justify;'>Прежде чем закончить тему уровней в стеке TCP/IP, 
  рассмотрим, как происходит общение между уровнями стека протоколов в компьютерах 
  на разных концах сквозного соединения. На рис. 2.25 изображены два стека TCP/IP 
  на компьютерах, между которыми расположено несколько маршрутизаторов.</p>
<p style='text-align:justify;'>Вы знаете, что приложение передает данные стеку 
  протоколов. Потом они опускаются вниз по стеку, передаются по сети, затем поднимаются 
  вверх по стеку протоколов компьютера на другом конце и наконец попадают в приложение. 
  Но три этом каждый уровень стека работает так, будто на другом конце находится 
  только этот уровень и ничего больше. Например, если в качестве приложения выступает 
  FTP, то FTP-клиент «говорит» непосредственно с FTP-сервером, не имея сведений 
  о том, что между ними есть TCP, IP и физическая сеть.</p>
<p style='text-align:justify;'>Это верно и для других уровней. Например, если 
  на транспортном уровне используется протокол TCP, то он общается только с протоколом 
  TCP на другом конце, не зная, какие еще протоколы и сети используются для поддержания 
  «беседы». В идеале должно быть так: если уровень N посылает сообщение, то уровень 
  N на другом конце принимает только его, а все манипуляции, произведенные над 
  этим сообщением нижележащими уровнями, оказываются невидимыми.</p>
<p style='text-align:justify;'>Последнее замечание требует объяснения. На рис. 
  2.25 вы увидите, что транспортный уровень&nbsp;- самый нижний из сквозных уровней, 
  то есть таких, связь между которыми устанавливается без посредников. Напротив, 
  в «разговоре» на межсетевом уровне участвуют маршрутизаторы или полнофункциональные 
  компьютеры, расположенные на маршруте сообщения.</p>
<p style='text-align:justify;'><i>Примечание:</i> Предполагается наличие промежуточных 
  маршрутизаторов, то есть сообщение не попадает сразу в конечный пункт.</p>
<p align=center style='text-align:center;'> <img width=549 height=212
src="./img/image028.gif" v:shapes="_x0000_i1025"> </p>
<p align=center style='text-align:center;'>Рис. 2.25. Сквозная сеть</p>
<p style='text-align:justify;'>Но промежуточные системы могут изменять некоторые 
  поля, например, время существования датаграммы (TTL&nbsp;- time to live) в IP-заголовке. 
  Поэтому межсетевой уровень в пункте назначения может «видеть» не в точности 
  то же сообщение, что межсетевой уровень, который его послал.</p>
<p style='text-align:justify;'>Этот подчеркивает различие между межсетевым и транспортным 
  уровням. Межсетевой уровень отвечает за доставку сообщений в следующий узел 
  на маршруте. И он общается с межсетевым уровнем именно этого узла, а не с межсетевым 
  уровнем в конечной точке. Транспортные же уровни контактируют напрямую, не имея 
  информации о существовании промежуточных систем.</p>
<h3><a name="p3">Резюме</a></h3>
<p style='text-align:justify;'>В этом разделе дано сравнение моделей OSI и TCP/IP. 
  Вы узнали, что семиуровневая модель OSI нужна как средство описания сетевой 
  архитектуры, но созданные на ее базе реализации почти не имеют успеха.</p>
<hr><div align="right"><a href="adv14.htm#top">Вверх</a> | <a href="index.htm">Содержание</a> | <a href="adv13.htm">Назад</a> | <a href="adv15.htm">Далее</a></div>
</body>
</html>
