<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<link href="style.css" type="text/css" rel=stylesheet>
<title>Глава 4</title>
</head>
<body lang=RU link=blue vlink=purple class="Normal" bgcolor="#FFFFFF">
<h1><a name="top">Глава 4. Инструменты и ресурсы</a></h1>
<h2><a name="p1">Совет 33. Используйте утилиту </a>ping</h2>
<hr><div align="right"><a href="adv33.htm#p2">Вниз</a> | <a href="index.htm">Содержание</a> | <a href="adv32.htm">Назад</a> | <a href="adv34.htm">Далее</a></div>
<p style='text-align:justify;'>Один из самых главных и полезных инструментов отладки 
  сетей и работающих в них приложений - это утилита ping. Ее основное назначение 
  - проверить наличие связи между двумя хостами.</p>
<p style='text-align:justify;'>Прежде необходимо разъяснить несколько моментов, 
  касающихся ping. Во-первых, по словам Майка Муусса, слово «ping» не расшифровывается 
  как «packet internet groper» (проводящий межсетевые пакеты). Своим названием 
  эта программа обязана звуку, который издает сонар, устанавливаемый на подводных 
  лодках. История создания программы ping изложена в статье «The Story of the 
  Ping Program» Муусса на Web-странице http://ftp.arl.mil/-mike/ping/html. Там 
  же приведен и ее исходный текст.</p>
<p style='text-align:justify;'>Во-вторых, эта утилита не использует ни TCP, ни 
  UDP, поэтому для нее нет никакого хорошо известного порта. Для проверки наличия 
  связи ping пользуется функцией эхо-контроля, имеющейся в протоколе ICMP. Помните 
  (совет 14), что, хотя сообщения ICMP передаются в IP-датаграммах, ICMP считается 
  не отдельным протоколом, а частью IP.</p>
<p style='text-align:justify;'><i>Примечание:</i> В RFC 792 [Postel 1981] на первой 
  странице сказано: «1СМР использует базовую поддержку IP, как если бы это был 
  протокол более высокого уровня, однако в действительности ICMP является неотъемлемой 
  частью IP и должен быть реализован в каждом IP-модуле».</p>
<p style='text-align:justify;'>Таким образом, структура пакета, посылаемого ping, 
  имеет такой вид, как на рис. 4.1. Показанная на рис. 4.2 ICMP-часть сообщения 
  состоит из восьмибайтного ICMP-заголовка и n байт дополнительной информации.</p>
<p align=center style='text-align:center;'> <img width=305 height=74
src="./img/image041.gif" v:shapes="_x0000_i1025"> </p>
<p align=center style='text-align:center;'>Рис. 4.1. Формат пакета ping</p>
<p style='text-align:justify;'>Обычно в качестве значения n&nbsp;- числа дополнительных 
  байтов в пакете ping выбирается 56 (UNIX) или 32 (Windows), но эту величину 
  можно изменить с помощью флагов -s (UNIX) или -l (Windows).</p>
<p style='text-align:justify;'>В некоторых версиях ping пользователь может задавать 
  значения дополнительных данных или даже указывать, что они должны генерироваться 
  псевдослучайным образом. По умолчанию в большинстве версий дополнительные данные 
  циклически переставляемый по кругу набор байтов.</p>
<p style='text-align:justify;'><i>Примечание:</i> Задание конкретных данных бывает 
  полезно при отладке ошибок, зависящих от данных.</p>
<p style='text-align:justify;'>UNIX&nbsp;- версия ping помещает временной штамп 
  (структуру timeval) в первые восемь байт дополнительных данных (при условии, 
  конечно, что пользователь не задал меньшее количество). Когда программа ping 
  получает эхо-ответ, она использует этот временной штамп для вычисления периода 
  кругового обращения (RTT). Windows-версия ping этого не делает (вывод основан 
  на анализе информации, полученной с помощью программы tcpdump), но в тексте 
  примера ping, поставляемого в составе компилятора Visual C++, этот алгоритм 
  присутствует.</p>
<p align=center style='text-align:center;'> <img width=414 height=172
src="./img/image042.gif" v:shapes="_x0000_i1026"> </p>
<p align=center style='text-align:center;'>Рис. 4.2. Пакет эхо&nbsp;– сообщения 
  запрос/ответ протокола ICMP</p>
<p style='text-align:justify;'>Поскольку поля идентификатор и порядковый номер 
  не задействованы ни в эхо-запросе, ни в эхо-ответе, ping использует их для идентификации 
  полученных ICMP-ответов. Так как для IP-датаграмм нет специального порта, они 
  доставляются каждому процессу, который открыл простой (raw) сокет с указанием 
  протокола ICMP (совет 40). Поэтому ping помещает свой идентификатор процесса 
  в поле идентификатор, так что каждый запущенный экземпляр способен отличить 
  ответы на свои запросы. Таким образом, поле идентификатор в этом случае можно 
  представить как аналог номера порта.</p>
<p style='text-align:justify;'>Таким же образом ping помещает в поле порядковый 
  номер значение счетчика для того, чтобы связать ответ с запросом. Именно это 
  значение ping показывает как icmp_seq.</p>
<p style='text-align:justify;'>Обычно первое ваше действие при пропадании связи 
  с удаленным хостом&nbsp;- это запуск ping с указанием адреса этого хоста (хост 
  «пингуется»). Предположим, что нужно связаться с хостом А с помощью программы 
  telnet, но соединение не устанавливается из-за истечения тайм-аута. Причин может 
  быть несколько: проблема в сети между двумя хостами, не работает сам хост А, 
  проблема в удаленном стеке TCP/IP или не запущен сервер telnet.</p>
<p style='text-align:justify;'>Сначала следует проверить, «пингуя» хост А, что 
  он достижим. Если работа ping Проходит нормально, то можно сказать, что с сетью 
  все в порядке, а проблема, вероятно, связана с самим хостом А. Если же невозможно 
  «достучаться» до хоста А с помощью ping, то требуется «пропинговать» ближайший 
  маршрутизатор, чтобы понять, удается ли достичь хотя бы границы собственной 
  сети. Если это получается, то воспользуйтесь программой traceroute (совет 35), 
  чтобы выяснить, насколько далеко можно продвинуться по маршруту от вашего хоста 
  к хосту А. Часто это помогает идентифицировать сбойный маршрутизатор или хотя 
  бы сделать предположение о месте возникновения ошибки.</p>
<p style='text-align:justify;'>Поскольку ping работает на уровне протокола IP, 
  она не зависит от правильности конфигурации TCP или UDP. Поэтому иногда полезно 
  «пропинговать» свой собственный хост, чтобы проверить правильность установки 
  сетевого программного обеспечения. Сначала можно указать ping возвратный адрес 
  localhost (127.0.0.1), чтобы убедиться в работе хотя бы части сетевой поддержки. 
  Если при этом проблем не возникает, то следует «пропинговать» один или несколько 
  сетевых интерфейсов и удостовериться, что они правильно сконфигурированы.</p>
<p style='text-align:justify;'>Попробуйте «пропинговать» хост netcom4.netcom.com, 
  который находится от вас в десяти переходах (рис. 4.3).</p>
<p>bsd: $ ping netcom4.netcom.com</p>
<p>PING netcom4.netcom.com (199.183.9.104): 56 data bytes</p>
<p>64 bytes from 199.183.9.104: icmp_seq=0 tt1=245 time=598.554 ms</p>
<p>64 bytes from 199.183.9.104: icmp_seq=1 tt1=245 time=550.081 ms</p>
<p>64 bytes from 199.183.9.104: icmp_seq=2 tt1=245 time=590.079 ms</p>
<p>64 bytes from 199.183.9.104: icmp_seq=3 tt1=245 time=530.114 ms</p>
<p>64 bytes from 199.183.9.104: icmp_seq=5 tt1=245 time=480.137 ms</p>
<p>64 bytes from 199.183.9.104: icmp_seq=6 tt1=245 time=540.081 ms</p>
<p>64 bytes from 199.183.9.104: icmp_seq=7 tt1=245 time=580.084 ms</p>
<p>64 bytes from 199.183.9.104: icmp_seq=8 tt1=245 time=490.078 ms</p>
<p>64 bytes from 199.183.9.104: icmp_seq=9 tt1=245 time=560.090 ms</p>
<p>64 bytes from 199.183.9.104: icmp_seq=10 tt1=245 time=490.090 ms</p>
<p>^C                          завершили ping вручную</p>
<p>- - - netcom4.netcom.com ping statistics - - -</p>
<p>12 packets transmitted, 10 packets received, 16% packet loss</p>
<p>round-trip min/avg/max/stddev = 480.137/540.939/598.554/40.871 ms</p>
<p class=MsoToc1>bsd: $</p>
<p align=center style='text-align:center;'>Рис. 4.З. Короткий прогон ping</p>
<p style='text-align:justify;'>Прежде всего, RTT для разных пакетов мало меняется 
  и остается в пределах 500 мс. Как следует из последней строки, RTT модифицируется 
  в диапазоне от 480,137 мс до 598,554 мс со стандартным отклонением 40,871 мс. 
  Тест слишком рано прерван, чтобы можно было сделать какие-то выводы, но и при 
  более длительном прогоне (около 2 мин) результат существенно не изменится. Так 
  что можно предположить, что нагрузка на сеть постоянная. Значительный разброс 
  RTT это, как правило, признак изменяющейся загрузки сети. При повышенной загрузке 
  возрастает длина очереди в маршрутизаторе, а вместе с ней - и RTT. При уменьшении 
  загрузки очередь сокращается, что приводит к уменьшению RTT.</p>
<p style='text-align:justify;'>Далее из рис. 4.3 видно, что на эхо-запрос ICMP 
  с порядковым номером 4 не пришел ответ. Это означает, что запрос либо ответ 
  был потерян одним из промежуточных маршрутизаторов. По данным сводной статистики, 
  было послано 12 запросов (0-11) и получено лишь, 10 ответов. Один из пропавших 
  ответов имеет порядковый номер 4, второй - 11 (вероятно, он был засчитан как 
  пропавший, поскольку не во­время прервана работа ping).</p>
<h3><a name="p2">Резюме</a></h3>
<p style='text-align:justify;'>Утилита ping - это один из важнейших инструментов 
  тестирования связи в сети. Поскольку для ее работы требуется лишь функционирование 
  самых нижних уровней сетевых служб, она полезна для проверки связи в условиях, 
  когда сервисы более высокого уровня, такие как TCP, или программы прикладного 
  уровня типа telnet не работают.</p>
<p style='text-align:justify'>С помощью ping часто удается сделать выводы об условиях 
  в сети, наблюдая за значениями и дисперсией RTT и за числом потерянных ответов.</p>
<hr><div align="right"><a href="adv33.htm#top">Вверх</a> | <a href="index.htm">Содержание</a> | <a href="adv32.htm">Назад</a> | <a href="adv34.htm">Далее</a></div>
</body>
</html>
